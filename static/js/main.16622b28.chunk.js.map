{"version":3,"sources":["components/PrivateRout/PrivateRout.js","redux/actions/ui.js","redux/types.js","components/Sidebar/Sidebar.js","redux/actions/user.js","components/NavBar/NavBar.js","redux/actions/emails.js","components/EmailListItem/EmailListItem.js","components/Error/Error.js","components/Loading/Loading.js","components/EmailList/EmailList.js","components/Inbox/Inbox.js","components/Sent/Sent.js","components/All/All.js","components/Compose/Compose.js","components/Success/Success.js","components/Login/Login.js","components/Email/Email.js","App.js","serviceWorker.js","const.js","redux/sagas/getEmailsSaga.js","redux/sagas/deleteEmailsSaga.js","redux/sagas/saveEmailsSaga.js","redux/sagas/index.js","utils.js","redux/reducers/emails.js","redux/reducers/ui.js","redux/reducers/user.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["PrivateRoute","Component","component","rest","user","useSelector","state","currentUser","render","props","to","pathname","from","location","loginError","message","type","payload","useStyles","makeStyles","theme","root","display","drawer","width","flexShrink","whiteSpace","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","Sidebar","classes","useTheme","dispatch","useDispatch","isSideBarOpen","ui","history","useHistory","goTo","section","push","className","CssBaseline","Drawer","variant","clsx","paper","IconButton","onClick","direction","Divider","List","ListItem","button","key","ListItemIcon","ListItemText","primary","setCurrentUser","appBar","zIndex","color","backgroundColor","title","flexGrow","appBarShift","marginLeft","menuButton","marginRight","hide","userId","position","borderRadius","shape","fade","palette","common","white","userIdIcon","height","pointerEvents","inputRoot","inputInput","paddingLeft","extendedIcon","rootError","marginTop","wrapper","newEmailBotton","fontSize","NavBar","allowUpdateUser","useState","setUserId","debouncedUserId","useDebounce","openError","setOpenError","useEffect","length","RegExp","test","err","AppBar","Toolbar","aria-label","edge","Typography","noWrap","Fab","InputBase","error","placeholder","input","inputProps","onChange","e","target","value","Collapse","in","Alert","severity","action","size","getEmails","skip","limit","paddingTop","paddingBottom","flexDirection","texts","margin","icon","fonts","EmailListItem","email","id","setSelectedEmail","subject","content","createdAt","map","field","index","Math","random","Box","my","textOverflow","overflow","moment","format","stopPropagation","deleteEmail","deleteMessage","borderBottom","divider","closeButton","right","top","grey","borderTop","Error","React","open","setOpen","handleClose","Dialog","onClose","aria-labelledby","disableTypography","gutterBottom","Button","centered","left","transform","Loading","CircularProgress","background","empty","textAlign","pagination","bottom","EmailList","emails","loading","page","setPage","interval","setInterval","clearInterval","Array","isArray","Pagination","count","Inbox","Sent","All","flexWrap","textField","header","reachText","border","container","Compose","setTo","setFrom","setSubject","setContent","fromErrorMessage","setFromErrorMessage","toErrorMessage","setToErrorMessage","toError","setToError","fromError","setFromError","validateFields","isToOk","result","isToValid","isFromOk","isFromValid","goBack","TextField","helperText","label","fullWidth","val","disabled","TextareaAutosize","rowsMin","Success","success","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","elevation","form","submit","Login","setError","errorMessage","setErrorMessage","isIdValid","isValidLetters","onLogin","a","preventDefault","Container","maxWidth","Avatar","avatar","noValidate","onSubmit","required","name","autoComplete","autoFocus","minHeight","pos","marginBottom","info","Email","useParams","findIndex","item","Card","CardContent","App","exact","path","Boolean","window","hostname","match","API_URI","fetchEmails","getEmailsSaga","getApiParams","currentSection","requestOptions","method","headers","Authorization","fetch","response","json","data","ok","indexOf","status","statusText","put","select","apiParams","call","takeLatest","deleteEmailsSaga","deleteEmailRequest","takeEvery","saveEmail","saveEmailsSaga","saveEmailRequest","body","JSON","stringify","rootSaga","all","removeItem","arr","splice","initialState","selectedEmail","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","compose","applyMiddleware","devToolsExtension","f","createStore","run","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.16622b28.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const user = useSelector((state) => state.user.currentUser);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!user) {\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: \"/login\", state: { from: props.location } }}\r\n            />\r\n          );\r\n        }\r\n        return <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import * as type from \"../types\";\r\n\r\nexport function toggleMenu() {\r\n  return {\r\n    type: type.TOGGLE_MENU,\r\n  };\r\n}\r\nexport function setUpdateUser(allow) {\r\n  return {\r\n    type: type.TOGGLE_UPDATE_USER,\r\n    payload: allow\r\n  };\r\n}\r\n\r\nexport function setSection(payload) {\r\n  return {\r\n    type: type.SET_CURRENT_SECTION,\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function getSection() {\r\n  return {\r\n    type: type.GET_CURRENT_SECTION,\r\n  };\r\n}\r\nexport function cleanError() {\r\n  return {\r\n    type: type.CLEAN_ERROR,\r\n  };\r\n}\r\nexport function loginError(message) {\r\n  return {\r\n    type: type.ERROR,\r\n    payload: message\r\n  };\r\n}\r\n\r\nexport function successMessage(message) {\r\n  return {\r\n    type: type.SUCCESS,\r\n    payload: message\r\n  };\r\n}\r\n\r\nexport function closeSuccessMessage() {\r\n  return {\r\n    type: type.CLOSE_SUCCESS,\r\n  };\r\n}\r\n","export const SET_SELECTED_EMAIL = 'SET_SELECTED_EMAIL';\r\nexport const TOGGLE_MENU = 'TOGGLE_MENU';\r\nexport const SET_CURRENT_SECTION = 'SET_CURRENT_SECTION';\r\nexport const GET_CURRENT_SECTION = 'GET_CURRENT_SECTION';\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\nexport const GET_EMAILS_REQUESTED = 'GET_EMAILS_REQUESTED';\r\nexport const GET_EMAILS_SUCCESS = 'GET_EMAILS_SUCCESS';\r\nexport const GET_EMAILS_FAILED = 'GET_EMAILS_FAILED';\r\nexport const DELETE_EMAIL_REQUESTED = 'DELETE_EMAIL_REQUESTED';\r\nexport const DELETE_EMAIL_SUCCESS = 'DELETE_EMAIL_SUCCESS';\r\nexport const DELETE_EMAIL_FAILED = 'DELETE_EMAIL_FAILED';\r\nexport const SAVE_EMAIL_REQUESTED = 'SAVE_EMAIL_REQUESTED';\r\nexport const SAVE_EMAIL_SUCCESS = 'SAVE_EMAIL_SUCCESS';\r\nexport const SAVE_EMAIL_FAILED = 'SAVE_EMAIL_FAILED';\r\nexport const CLEAN_ERROR = 'CLEAN_ERROR';\r\nexport const ERROR = 'ERROR';\r\nexport const SUCCESS = 'SUCCESS';\r\nexport const CLOSE_SUCCESS = 'CLOSE_SUCCESS';\r\nexport const SET_SKIP = 'SET_SKIP';\r\nexport const TOGGLE_UPDATE_USER = 'TOGGLE_UPDATE_USER';\r\n\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport AllInboxIcon from \"@material-ui/icons/AllInbox\";\r\n\r\nimport { setSection, toggleMenu } from \"../../redux/actions/ui\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n}));\r\n\r\nexport const Sidebar = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const isSideBarOpen = useSelector((state) => state.ui.isSideBarOpen);\r\n  let history = useHistory();\r\n\r\n  const goTo = (section) => {\r\n    dispatch(setSection(section));\r\n    history.push(`/${section}`);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    dispatch(toggleMenu());\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: isSideBarOpen,\r\n          [classes.drawerClose]: !isSideBarOpen,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: isSideBarOpen,\r\n            [classes.drawerClose]: !isSideBarOpen,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button key={\"Inbox\"} onClick={() => goTo(\"inbox\")}>\r\n            <ListItemIcon>\r\n              <InboxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Inbox\"} />\r\n          </ListItem>\r\n          <ListItem button key={\"Sent\"} onClick={() => goTo(\"sent\")}>\r\n            <ListItemIcon>\r\n              <MailOutlineIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Sent\"} />\r\n          </ListItem>\r\n          <ListItem button key={\"All Mail\"} onClick={() => goTo(\"all\")}>\r\n            <ListItemIcon>\r\n              <AllInboxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"All Mail\"} />\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n","import * as type from \"../types\";\r\n\r\nexport function setCurrentUser(payload) {\r\n  return {\r\n    type: type.SET_CURRENT_USER,\r\n    payload\r\n  };\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useDebounce } from \"use-lodash-debounce\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\n\r\nimport { loginError, toggleMenu } from \"../../redux/actions/ui\";\r\nimport { setCurrentUser } from \"../../redux/actions/user\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    color: \"orange\",\r\n    backgroundColor: \"#092c09\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  userId: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  userIdIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n    color: \"orange\",\r\n    backgroundColor: \"#204720\",\r\n    \"&:hover\": {\r\n      color: \"#204720\",\r\n      backgroundColor: \"orange\",\r\n    },\r\n  },\r\n  rootError: {\r\n    width: \"20%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n      backgroundColor: \"#f2c2c2\",\r\n      position: \"absolute\",\r\n    },\r\n  },\r\n  wrapper: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  newEmailBotton: {\r\n    whiteSpace: \"nowrap\",\r\n    \"@media (max-width:600px)\": {\r\n      width: '-webkit-fill-available'\r\n    },\r\n    \"@media (min-width:600px)\": {\r\n      fontSize: \"1.5rem\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      fontSize: \"1rem\",\r\n\r\n    },\r\n    marginRight: theme.spacing(1),\r\n    padding: theme.spacing(2),\r\n    color: \"orange\",\r\n    backgroundColor: \"#204720\",\r\n    \"&:hover\": {\r\n      color: \"#204720\",\r\n      backgroundColor: \"orange\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport const NavBar = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n\r\n  const isSideBarOpen = useSelector((state) => state.ui.isSideBarOpen);\r\n  const allowUpdateUser = useSelector((state) => state.ui.allowUpdateUser);\r\n  const user = useSelector((state) => state.user.currentUser);\r\n\r\n  const [userId, setUserId] = useState(\"\");\r\n  const debouncedUserId = useDebounce(userId, 1000);\r\n  const [openError, setOpenError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setUserId(user);\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      if (debouncedUserId.length === 0) {\r\n        return;\r\n      }\r\n      if (new RegExp(\"^[\\u0590-\\u05FF]+$\").test(debouncedUserId)) {\r\n        setOpenError(true);\r\n        setUserId(\"\");\r\n      } else {\r\n        setOpenError(false);\r\n        dispatch(setCurrentUser(debouncedUserId));\r\n      }\r\n    } catch (err) {\r\n      dispatch(\r\n        loginError(\"there is a problem with you User ID please try again\")\r\n      );\r\n    }\r\n  }, [debouncedUserId]);\r\n\r\n  const handleDrawerOpen = () => {\r\n    dispatch(toggleMenu());\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: isSideBarOpen,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: isSideBarOpen,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap className={classes.title}>\r\n            Email App\r\n          </Typography>\r\n          {user && (\r\n            <Fab\r\n              variant=\"extended\"\r\n              className={classes.newEmailBotton}\r\n              onClick={() => history.push(\"/compose\")}\r\n            >\r\n                <AddIcon />\r\n              New Email\r\n            </Fab>\r\n          )}\r\n          {allowUpdateUser && (\r\n            <div className={classes.userId}>\r\n              <div className={classes.userIdIcon}>\r\n                <PersonIcon />\r\n              </div>\r\n              <InputBase\r\n                error={true}\r\n                placeholder=\"User ID here\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ \"aria-label\": \"userId\" }}\r\n                onChange={(e) => setUserId(e.target.value)}\r\n                value={userId || \"\"}\r\n              />\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n        <div className={classes.wrapper}>\r\n          <div className={classes.rootError}>\r\n            <Collapse in={openError}>\r\n              <Alert\r\n                severity=\"error\"\r\n                action={\r\n                  <IconButton\r\n                    aria-label=\"close\"\r\n                    color=\"inherit\"\r\n                    size=\"small\"\r\n                    onClick={() => {\r\n                      setOpenError(false);\r\n                    }}\r\n                  >\r\n                    <CloseIcon fontSize=\"inherit\" />\r\n                  </IconButton>\r\n                }\r\n              >\r\n                ID must be : a-z, A-Z, 1-9\r\n              </Alert>\r\n            </Collapse>\r\n          </div>\r\n        </div>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n","import * as type from \"../types\";\r\n\r\nexport function setSelectedEmail(email) {\r\n  return {\r\n    type: type.SET_SELECTED_EMAIL,\r\n    payload: email,\r\n  };\r\n}\r\n\r\nexport function getEmails(skip, limit) {\r\n  return {\r\n    type: type.GET_EMAILS_REQUESTED,\r\n    payload: { skip, limit },\r\n  };\r\n}\r\nexport function getEmailsFail(message) {\r\n  return {\r\n    type: type.GET_EMAILS_FAILED,\r\n    payload: message,\r\n  };\r\n}\r\n\r\nexport function deleteEmail(id) {\r\n  return {\r\n    type: type.DELETE_EMAIL_REQUESTED,\r\n    payload: id,\r\n  };\r\n}\r\n\r\nexport function saveEmail(email) {\r\n  return {\r\n    type: type.SAVE_EMAIL_REQUESTED,\r\n    payload: email,\r\n  };\r\n}\r\n\r\nexport function saveEmailFail(message) {\r\n  return {\r\n    type: type.SAVE_EMAIL_FAILED,\r\n    payload: message,\r\n  };\r\n}\r\nexport function setSkip(skip) {\r\n  return {\r\n    type: type.SET_SKIP,\r\n    payload: skip,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as moment from \"moment\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nimport { deleteEmail, setSelectedEmail } from \"../../redux/actions/emails\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    \"@media (max-width:600px)\": {\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  texts: {\r\n    width: '350px',\r\n    \"@media (max-min:600px)\": {\r\n    },\r\n    \"@media (max-width:600px)\": {\r\n      width: '100px',\r\n      padding: 0,\r\n      margin: 0,\r\n    },\r\n  },\r\n  icon: {\r\n    marginTop: \"17px\",\r\n  },\r\n  fonts: {\r\n    \"@media (max-width:600px)\": {\r\n      fontSize: \"1rem\",\r\n    },\r\n    \"@media (min-width:600px)\": {\r\n      fontSize: \"1.2rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport const EmailListItem = ({ email }) => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const deleteMessage = (id, e) => {\r\n    try {\r\n      e.stopPropagation();\r\n      dispatch(deleteEmail(id));\r\n    } catch (e) {}\r\n  };\r\n\r\n  const onSelectedEmail = () => {\r\n    history.push(`/email/${email.id}`);\r\n    dispatch(setSelectedEmail(email));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ListItem\r\n        alignItems=\"flex-start\"\r\n        button\r\n        onClick={onSelectedEmail}\r\n        className={classes.root}\r\n      >\r\n        {[email.from, email.subject, email.content, email.createdAt].map(\r\n          (field, index) => (\r\n            <ListItemText\r\n              key={field + Math.random()}\r\n              className={classes.texts}\r\n              primary={\r\n                <Box\r\n                  component=\"div\"\r\n                  my={2}\r\n                  textOverflow=\"ellipsis\"\r\n                  overflow=\"hidden\"\r\n                  className={classes.fonts}\r\n                >\r\n                  {index !== 3 ? field : moment(field).format(\"MMM-D\")}\r\n                </Box>\r\n              }\r\n            />\r\n          )\r\n        )}\r\n        <ListItemIcon className={classes.icon}>\r\n          <DeleteIcon onClick={(e) => deleteMessage(email.id, e)} />\r\n        </ListItemIcon>\r\n      </ListItem>\r\n      <Divider />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { cleanError } from \"../../redux/actions/ui\";\r\nimport { setCurrentUser } from \"../../redux/actions/user\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n    margin: 0,\r\n    padding: theme.spacing(4) ,\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  content: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  action: {\r\n    borderTop: `1px solid ${theme.palette.divider}`,\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function Error() {\r\n  const [open, setOpen] = React.useState(true);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const message = useSelector((state) => state.ui.error);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    dispatch(cleanError());\r\n    dispatch(setCurrentUser(null));\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <MuiDialogTitle disableTypography className={classes.title}>\r\n          <Typography variant=\"h6\">{\"Something went wrong\"}</Typography>\r\n          <IconButton\r\n            aria-label=\"Close\"\r\n            className={classes.closeButton}\r\n            onClick={handleClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </MuiDialogTitle>\r\n        <MuiDialogContent className={classes.content}>\r\n          <Typography gutterBottom>{message}</Typography>\r\n        </MuiDialogContent>\r\n        <MuiDialogActions className={classes.action}>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            To Login Page\r\n          </Button>\r\n        </MuiDialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  centered: {\r\n    position: \"fixed\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n}));\r\n\r\nexport default function Loading() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.centered}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nimport { EmailListItem } from \"../EmailListItem/EmailListItem\";\r\nimport Error from \"../Error/Error\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport { setUpdateUser } from \"../../redux/actions/ui\";\r\nimport { getEmails, setSkip } from \"../../redux/actions/emails\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    height: \"86vh\",\r\n    \"& > *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  centered: {\r\n    position: \"fixed\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n  empty: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    textAlign: \"center\",\r\n    height: \"100%\",\r\n    position: \"fixed\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \" translate(-50%, 0)\",\r\n    color: \"#092c09\",\r\n    fontSize: '1.2rem',\r\n    \"@media (max-width:600px)\": {\r\n      padding:0,\r\n      fontSize: '1.2rem'\r\n    },\r\n    \"@media (min-width:600px)\": {\r\n      fontSize: \"1.5rem\",\r\n    },\r\n  },\r\n  pagination: {\r\n    \"& > *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    position: \"fixed\",\r\n    bottom: 25,\r\n    display:'flex',\r\n    justifyContent:'center',\r\n    width: '-webkit-fill-available'\r\n  },\r\n}));\r\n\r\nexport const EmailList = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  \r\n  const emails = useSelector((state) => state.emails.emails);\r\n  const loading = useSelector((state) => state.ui.loading);\r\n  const error = useSelector((state) => state.ui.error);\r\n  const userId = useSelector((state) => state.user.currentUser);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const limit = 11;\r\n\r\n  useEffect(() => {\r\n    dispatch(setUpdateUser(true));\r\n    dispatch(getEmails());\r\n    const interval = setInterval(() => {\r\n      dispatch(getEmails());\r\n    }, 40000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setPage(1);\r\n    dispatch(getEmails());\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    dispatch(setSkip((page - 1) * limit));\r\n  }, [page]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.centered}>{loading && !error && <Loading />}</div>\r\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n        {!loading &&\r\n          !error &&\r\n          Array.isArray(emails) &&\r\n          emails.length > 0 &&\r\n          emails.map((email) => <EmailListItem email={email} key={email.id} />)}\r\n        {error && (\r\n          <Error message={\"There is problem at this moment please try later\"} />\r\n        )}\r\n      </List>\r\n      {!error && !loading && Array.isArray(emails) && emails.length === 0 && (\r\n        <div className={classes.empty}>There is no emails to show</div>\r\n      )}\r\n      <div className={classes.pagination}>\r\n        <Pagination\r\n          count={3}\r\n          variant=\"outlined\"\r\n          shape=\"rounded\"\r\n          onChange={(e, page) => setPage(page)}\r\n          page={page}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { EmailList } from \"../EmailList/EmailList\";\r\n\r\nexport const Inbox = () => {\r\n  return <EmailList />;\r\n};\r\n","import React from \"react\";\r\nimport { EmailList } from \"../EmailList/EmailList\";\r\n\r\nexport const Sent = () => {\r\n  return <EmailList />;\r\n};\r\n","import React from \"react\";\r\nimport { EmailList } from \"../EmailList/EmailList\";\r\n\r\nexport const All = () => {\r\n  return <EmailList  />;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { TextareaAutosize } from \"@material-ui/core\";\r\n\r\nimport { saveEmail, saveEmailFail } from \"../../redux/actions/emails\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    width: \"100%\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n\r\n  header: {\r\n    color: \"orange\",\r\n    backgroundColor: \"#092c09\",\r\n    textAlign: \"center\",\r\n    width: \"100%\",\r\n    padding: theme.spacing(2),\r\n    borderRadius: \"2%\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  icon: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"orange\",\r\n      borderRadius: \"50%\",\r\n      color: \"#092c09\",\r\n    },\r\n  },\r\n  reachText: {\r\n    height: 200,\r\n  },\r\n  content: {\r\n    margin: 0,\r\n    width: \"100%\",\r\n    border: \"white\",\r\n  },\r\n  container: {\r\n    width: \"100%\",\r\n    border: \"white\",\r\n  },\r\n}));\r\n\r\nexport const Compose = () => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user.currentUser);\r\n\r\n  const [to, setTo] = useState(\"\");\r\n  const [from, setFrom] = useState(user);\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [fromErrorMessage, setFromErrorMessage] = useState(\"\");\r\n  const [toErrorMessage, setToErrorMessage] = useState(\"\");\r\n  const [toError, setToError] = useState(false);\r\n  const [fromError, setFromError] = useState(false);\r\n\r\n  const onToChange = (val) => {\r\n    setTo(val);\r\n  };\r\n\r\n  const onFromChange = (val) => {\r\n    setFrom(val);\r\n  };\r\n  \r\n  const isToValid = () => {\r\n    const result = to.length === 0;\r\n    setToError(result);\r\n    setToErrorMessage(result ? \"please insert Sender ID here\" : \"\");\r\n    return !result;\r\n  };\r\n\r\n  const isFromValid = () => {\r\n    const result = from.length === 0;\r\n    setFromError(result);\r\n    setFromErrorMessage(result ? \"please insert Receiver ID here\" : \"\");\r\n    return !result;\r\n  };\r\n\r\n  const validateFields = () => {\r\n    const isToOk = isToValid();\r\n    const isFromOk = isFromValid();\r\n    return isToOk && isFromOk;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    try {\r\n      if (!validateFields()) {\r\n        return;\r\n      }\r\n      dispatch(saveEmail({ from, to, subject, content }));\r\n      setContent(\"\");\r\n      setSubject(\"\");\r\n      setTo(\"\");\r\n      setFrom(\"\");\r\n      setContent(\"\");\r\n      history.goBack();\r\n    } catch (e) {\r\n      dispatch(saveEmailFail(e.message));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFrom(user);\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.header}>\r\n        <CloseIcon className={classes.icon} onClick={() => history.goBack()} />\r\n        <span>New Email</span>\r\n        <SendIcon className={classes.icon} onClick={onSubmit} />\r\n      </div>\r\n      <div className={classes.container}>\r\n        <TextField\r\n          error={fromError}\r\n          helperText={fromErrorMessage}\r\n          className={classes.textField}\r\n          id=\"a\"\r\n          label=\"from\"\r\n          fullWidth\r\n          value={from}\r\n          onChange={(e) => onFromChange(e.target.value)}\r\n          disabled={true}\r\n        />\r\n        <TextField\r\n          error={toError}\r\n          className={classes.textField}\r\n          id=\"s\"\r\n          helperText={toErrorMessage}\r\n          label=\"to\"\r\n          fullWidth\r\n          value={to}\r\n          onChange={(e) => onToChange(e.target.value)}\r\n        />\r\n        <TextField\r\n          className={classes.textField}\r\n          id=\"sf\"\r\n          label=\"subject\"\r\n          fullWidth\r\n          value={subject}\r\n          onChange={(e) => setSubject(e.target.value)}\r\n        />\r\n\r\n        <TextareaAutosize\r\n          aria-label=\"minimum height\"\r\n          value={content}\r\n          rowsMin={35}\r\n          className={classes.content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Snackbar } from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nimport { closeSuccessMessage } from \"../../redux/actions/ui\";\r\n\r\nexport const Success = () => {\r\n  const dispatch = useDispatch();\r\n  const message = useSelector((state) => state.ui.success);\r\n\r\n  const handleClose = () => {\r\n    dispatch(closeSuccessMessage());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        open={!!message}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n      >\r\n        <MuiAlert\r\n          onClose={handleClose}\r\n          severity=\"success\"\r\n          elevation={6}\r\n          variant=\"filled\"\r\n        >\r\n          {message}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { loginError } from \"../../redux/actions/ui\";\r\n\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { setCurrentUser } from \"../../redux/actions/user\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    color: \"orange\",\r\n    backgroundColor: \"#092c09\",\r\n    \"&:hover\": {\r\n      color: \"orange\",\r\n      backgroundColor: \"#092c09\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const [userId, setUserId] = useState('');\r\n  const [error, setError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const isIdValid = () => {\r\n    const isValidLetters = new RegExp(\"^[\\u0590-\\u05FF]+$\").test(userId);\r\n    setError(isValidLetters);\r\n    setErrorMessage(isValidLetters ? \"ID must be : a-z, A-Z, 1-9\" : \"\");\r\n    return isValidLetters;\r\n  };\r\n\r\n  const onLogin = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      if (userId.length === 0 || isIdValid()) {\r\n        setUserId('')\r\n        return;\r\n      }\r\n      else{\r\n        dispatch(setCurrentUser(userId));\r\n        history.push(\"/inbox\");\r\n      }\r\n    } catch (err) {\r\n      dispatch(loginError(\"there is a problem please try again\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={onLogin}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"userId\"\r\n            label=\"User Id\"\r\n            name=\"email\"\r\n            autoComplete=\"userId\"\r\n            autoFocus\r\n            value={userId}\r\n            onChange={(e) => setUserId(e.target.value)}\r\n            error={error}\r\n            helperText={errorMessage}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Show My Emails\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport * as moment from \"moment\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minHeight: \"95vh\",\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n    margin: 5,\r\n  },\r\n  info: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    margin: 2,\r\n    padding: \"10px\",\r\n    \"@media (max-width:600px)\": {\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  content: {\r\n    margin: 20,\r\n    display: \"flex\",\r\n    padding: \"10px\",\r\n  },\r\n  icon: {\r\n    backgroundColor: \"#092c09\",\r\n    color: \"orange\",\r\n    borderRadius: \"50%\",\r\n    margin: 15,\r\n    \"&:hover\": {\r\n      backgroundColor: \"orange\",\r\n      color: \"#092c09\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default function Email() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  let { id } = useParams();\r\n  const emails = useSelector((state) => state.emails.emails);\r\n\r\n  const index = emails.findIndex((item) => item.id === id);\r\n  const email = emails[index];\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CloseIcon className={classes.icon} onClick={() => history.goBack()} />\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\" className={classes.pos}>\r\n          {email.subject}\r\n        </Typography>\r\n        <Divider />\r\n        <div className={classes.info}>\r\n          <Typography className={classes.pos} color=\"textSecondary\">\r\n            {email.from}\r\n          </Typography>\r\n          <Typography className={classes.pos} color=\"textSecondary\">\r\n            {moment(email.createdAt).format(\"D-MM-YYYY  HH:mm\")}\r\n          </Typography>\r\n        </div>\r\n        <Divider />\r\n        <div className={classes.content}>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            {email.content}\r\n          </Typography>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core\";\n\nimport { PrivateRoute } from \"./components/PrivateRout/PrivateRout\";\nimport { Sidebar } from \"./components/Sidebar/Sidebar\";\nimport { NavBar } from \"./components/NavBar/NavBar\";\nimport { Inbox } from \"./components/Inbox/Inbox\";\nimport { Sent } from \"./components/Sent/Sent\";\nimport { All } from \"./components/All/All\";\nimport { Compose } from \"./components/Compose/Compose\";\nimport { Success } from \"./components/Success/Success\";\nimport Login from \"./components/Login/Login\";\nimport Email from \"./components/Email/Email\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100%\",\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    \"@media (max-width:600px)\": {\n      padding: 0,\n    },\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <>\n            <div className={classes.root}>\n              <NavBar />\n              <Sidebar />\n              <main className={classes.content}>\n                <div className={classes.toolbar} />\n                <Route exact path=\"/\">\n                  <PrivateRoute component={Inbox} />\n                </Route>\n                <Route path=\"/inbox\">\n                  <PrivateRoute component={Inbox} />\n                </Route>\n                <Route path=\"/sent\">\n                  <PrivateRoute component={Sent} />\n                </Route>\n                <Route path=\"/all\">\n                  <PrivateRoute component={All} />\n                </Route>\n                <Route path=\"/login\">\n                  <Login />\n                </Route>\n                <Route path=\"/compose\">\n                  <PrivateRoute component={Compose} />\n                </Route>\n                <Route path=\"/email/:id\">\n                  <PrivateRoute component={Email} />\n                </Route>\n              </main>\n            </div>\n          </>\n        </Switch>\n      </Router>\n      <Success />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const API_URI = 'https://email-app-api.herokuapp.com'\r\n","import { call, put, takeLatest, select } from \"redux-saga/effects\";\r\nimport * as type from \"../types\";\r\nimport { API_URI } from \"../../const\";\r\n\r\nconst getApiParams = (state) => ({\r\n  user: state.user.currentUser,\r\n  section: state.ui.currentSection,\r\n  skip: state.emails.skip\r\n});\r\n\r\nasync function getEmails({ user, section, skip }) {\r\n  try {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${user}`,\r\n      },\r\n    };\r\n    \r\n    const response = await fetch(\r\n      `${API_URI}/emails/${section}?skip=${skip}`,\r\n      requestOptions\r\n    );\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      if ([401, 403].indexOf(response.status) !== -1) {\r\n        throw new Error(\"cannot get emails\");\r\n      }\r\n      const error = (data && data.message) || response.statusText;\r\n      throw new Error(error);\r\n    }\r\n    return data;\r\n  } catch (e) {\r\n    put({ type: type.ERROR, payload: e.message });\r\n    throw new Error(e.message);\r\n  }\r\n}\r\n\r\nfunction* fetchEmails() {\r\n  try {\r\n    const apiParams = yield select(getApiParams);\r\n    const emails = yield call(getEmails, apiParams);\r\n\r\n    yield put({ type: type.GET_EMAILS_SUCCESS, payload: emails });\r\n  } catch (e) {\r\n    yield put({ type: type.GET_EMAILS_FAILED, payload: e.message });\r\n  }\r\n}\r\n\r\nfunction* getEmailsSaga() {\r\n  yield takeLatest(type.GET_EMAILS_REQUESTED, fetchEmails);\r\n}\r\n\r\nexport default getEmailsSaga;\r\n","import { call, put, takeEvery, select } from \"redux-saga/effects\";\r\nimport * as type from \"../types\";\r\nimport { API_URI } from \"../../const\";\r\n\r\nconst getApiParams = (state) => ({\r\n  user: state.user.currentUser,\r\n});\r\n\r\nasync function deleteEmailRequest({ user, id }) {\r\n  try {\r\n    const requestOptions = {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${user}`,\r\n      },\r\n    };\r\n\r\n    const response = await fetch(`${API_URI}/email/${id}`, requestOptions);\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      if ([401, 403].indexOf(response.status) !== -1) {\r\n        throw new Error(\"cannot delete email\");\r\n      }\r\n      const error = (data && data.message) || response.statusText;\r\n      throw new Error(error);\r\n    }\r\n    return data;\r\n  } catch (e) {\r\n    throw new Error(e.message);\r\n  }\r\n}\r\n\r\nfunction* deleteEmail({ payload }) {\r\n  try {\r\n    const apiParams = yield select(getApiParams);\r\n    const email = yield call(deleteEmailRequest, {\r\n      ...apiParams,\r\n      id: payload,\r\n    });\r\n\r\n    const message = \"email deleted successfully\";\r\n    yield put({\r\n      type: type.DELETE_EMAIL_SUCCESS,\r\n      payload: { id: email.id, message },\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: type.SAVE_EMAIL_FAILED,\r\n      payload: e.message,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* deleteEmailsSaga() {\r\n  yield takeEvery(type.DELETE_EMAIL_REQUESTED, deleteEmail);\r\n}\r\n\r\nexport default deleteEmailsSaga;\r\n","import { call, put, takeEvery, select } from \"redux-saga/effects\";\r\nimport * as type from \"../types\";\r\nimport { API_URI } from \"../../const\";\r\n\r\nconst getApiParams = (state) => ({\r\n  user: state.user.currentUser,\r\n});\r\n\r\nasync function saveEmailRequest({ user, email }) {\r\n  try {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${user}`,\r\n      },\r\n      body: JSON.stringify(email),\r\n    };\r\n\r\n    const response = await fetch(`${API_URI}/email`, requestOptions);\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      if ([401, 403].indexOf(response.status) !== -1) {\r\n        throw new Error(\"cannot save email\");\r\n      }\r\n      const error = (data && data.message) || response.statusText;\r\n      throw new Error(error);\r\n    }\r\n    return data;\r\n  } catch (e) {\r\n    throw new Error(e.message);\r\n  }\r\n}\r\n\r\nfunction* saveEmail({ payload }) {\r\n  try {\r\n    const apiParams = yield select(getApiParams);\r\n    const email = yield call(saveEmailRequest, {\r\n      ...apiParams,\r\n      email: payload,\r\n    });\r\n    const message = \"Email saves successfully\";\r\n    yield put({ type: type.SAVE_EMAIL_SUCCESS, payload: { email, message } });\r\n  } catch (e) {\r\n    yield put({ type: type.SAVE_EMAIL_FAILED, payload: e.message });\r\n  }\r\n}\r\n\r\nfunction* saveEmailsSaga() {\r\n  yield takeEvery(type.SAVE_EMAIL_REQUESTED, saveEmail);\r\n}\r\n\r\nexport default saveEmailsSaga;\r\n","import { all } from 'redux-saga/effects'\r\nimport getEmailsSaga from './getEmailsSaga'\r\nimport deleteEmailsSaga from './deleteEmailsSaga'\r\nimport saveEmailsSaga from './saveEmailsSaga'\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    getEmailsSaga(),\r\n    deleteEmailsSaga(),\r\n    saveEmailsSaga()\r\n  ])\r\n}","\r\nexport const removeItem = (arr, id) => {\r\n  const index = arr.findIndex((item) => item.id === id);\r\n  if (index !== -1) {\r\n    arr.splice(index, 1);\r\n  }\r\n  return arr;\r\n};\r\n","import { removeItem } from \"../../utils\";\r\nimport * as type from \"../types\";\r\n\r\nconst initialState = {\r\n  emails: [],\r\n  selectedEmail: null,\r\n  skip:0,\r\n};\r\n\r\nexport default function emails(state = initialState, action) {\r\n  switch (action.type) {\r\n    case type.GET_EMAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        emails: action.payload,\r\n      };\r\n\r\n    case type.SET_SELECTED_EMAIL:\r\n      return {\r\n        ...state,\r\n        selectedEmail: action.payload,\r\n      };\r\n\r\n    case type.DELETE_EMAIL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        emails: [...removeItem(state.emails, action.payload.id)],\r\n      };\r\n\r\n    case type.SAVE_EMAIL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        emails: [...state.emails, action.payload.email],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as type from \"../types\";\r\n\r\nconst initialState = {\r\n  isSideBarOpen: false,\r\n  currentSection: \"inbox\",\r\n  loading: false,\r\n  error: null,\r\n  success: null,\r\n  allowUpdateUser: false\r\n};\r\n\r\nexport default function ui(state = initialState, action) {\r\n  switch (action.type) {\r\n    case type.TOGGLE_MENU:\r\n      return {\r\n        ...state,\r\n        isSideBarOpen: !state.isSideBarOpen,\r\n      };\r\n    case type.TOGGLE_UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        allowUpdateUser: action.payload,\r\n      };\r\n    case type.SET_CURRENT_SECTION:\r\n      return {\r\n        ...state,\r\n        currentSection: action.payload,\r\n      };\r\n    case type.GET_CURRENT_SECTION:\r\n      return {\r\n        currentSection: state.ui.currentSection,\r\n      };\r\n    case type.SAVE_EMAIL_REQUESTED:\r\n    case type.GET_EMAILS_REQUESTED:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case type.SAVE_EMAIL_SUCCESS:\r\n    case type.DELETE_EMAIL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: action.payload.message,\r\n      };\r\n    case type.GET_EMAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case type.DELETE_EMAIL_FAILED:\r\n    case type.SAVE_EMAIL_FAILED:\r\n    case type.GET_EMAILS_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case type.ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case type.CLEAN_ERROR:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case type.SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: action.payload,\r\n      };\r\n    case type.CLOSE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as type from \"../types\";\r\n\r\nconst initialState = {\r\n  currentUser: '',\r\n};\r\n\r\nexport default function user(state = initialState, action) {\r\n  switch (action.type) {\r\n    case type.SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport emails from './emails';\r\nimport ui from './ui';\r\nimport user from './user';\r\n\r\nconst rootReducer = combineReducers({\r\n  user,\r\n  emails,\r\n  ui\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"./sagas/index\";\r\nimport rootReducer from \"./reducers/index.js\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = compose(\r\n  applyMiddleware(sagaMiddleware),\r\n  typeof window === \"object\" && typeof window.devToolsExtension !== \"undefined\"\r\n    ? window.devToolsExtension()\r\n    : (f) => f\r\n)(createStore)(rootReducer);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}